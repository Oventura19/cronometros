{"version":3,"sources":["components/CronoForm.js","components/CronoCard.js","components/Cronos.js","App.js","registerServiceWorker.js","index.js"],"names":["CronoForm","props","Grid","Row","Card","Content","Form","size","onSubmit","handleUpdate","Field","placeholder","title","name","onChange","handleChange","project","className","Button","type","basic","fluid","color","onClick","handleDelete","CronoCard","state","elapsed","nextProps","ms","this","counter","seconds","Math","floor","minutes","hours","humanized","pad","toString","join","setState","numberString","padded","length","Header","textAlign","Meta","Description","style","fontSize","Icon","link","handleEdit","extra","active","handleStop","handleStart","React","Component","Cronos","changeProperties","id","e","cronos","map","crono","target","formTitle","value","formProject","updateCrono","preventDefault","edit","newCrono","bind","editCrono","deleteCrono","buttonStart","buttonStop","timing","numberOfCronos","concat","window","confirm","timings","interval","clearInterval","filter","setInterval","tick","Container","container","centered","columns","key","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a1a93c01.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card , Form, Grid } from 'semantic-ui-react';\n\nconst CronoForm = (props) => {\n  return (\n    <Grid.Row>\n      <Card>\n        <Card.Content>\n          <Form size='large' onSubmit={props.handleUpdate}>\n            <Form.Field>\n              <label>Título</label>\n              <input placeholder={props.title} name='title' onChange={props.handleChange}/>\n            </Form.Field>\n            <Form.Field>\n              <label>Proyecto</label>\n              <input placeholder={props.project} name='project' onChange={props.handleChange}/>\n            </Form.Field>\n            <div className='ui two buttons'>\n              <Button type='submit' basic fluid color='blue'>{props.title !== '' ? 'Actualizar' : 'Crear'}</Button>\n              {props.title !== '' ? \n              <Button basic fluid color='red'>Cancelar</Button> : \n              <Button basic fluid color='red' onClick={props.handleDelete}>Cancelar</Button>\n              }\n            </div>\n          </Form>\n        </Card.Content>\n      </Card>\n    </Grid.Row>\n  )\n};\n\nexport default CronoForm;","import React from 'react';\nimport { Button, Card, Icon, Grid } from 'semantic-ui-react';\n\nclass CronoCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elapsed: '00:00:00'\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const ms = this.props.counter;\n    const seconds = Math.floor((ms / 100) % 60);\n    const minutes = Math.floor((ms / 100 / 60) % 60);\n    const hours = Math.floor(ms / 100 / 60 / 60);\n\n    const humanized = [\n      this.pad(hours.toString(), 2),\n      this.pad(minutes.toString(), 2),\n      this.pad(seconds.toString(), 2),\n    ].join(':');\n    \n    this.setState({elapsed:humanized})\n  }\n\n  pad(numberString, size) {\n    let padded = numberString;\n    while (padded.length < size) padded = `0${padded}`;\n    return padded;\n  }\n\n  render() {\n    return (\n      <Grid.Row>\n        <Card>\n          <Card.Content>\n            <Card.Header textAlign='left'>{this.props.title}</Card.Header>\n            <Card.Meta textAlign='left'>{this.props.project}</Card.Meta>\n            <Card.Description style={{fontSize: '25px'}}> <strong>{this.state.elapsed}</strong> </Card.Description>\n            <Card.Description textAlign='right'>\n              <Icon onClick={this.props.handleDelete} link name='trash alternate'/>\n              <Icon onClick={this.props.handleEdit} link name='edit'/>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            {this.props.active ? \n            <Button onClick={this.props.handleStop}basic fluid color='red'>Parar</Button>\n            :\n            <Button onClick={this.props.handleStart} basic fluid color='green'>Iniciar</Button>\n            }\n          </Card.Content>\n        </Card>\n      </Grid.Row>\n    )\n  }\n}\n\nexport default CronoCard;","import React from 'react';\nimport { Grid, Icon, Container } from 'semantic-ui-react';\nimport CronoForm from './CronoForm';\nimport CronoCard from './CronoCard';\n\nclass Cronos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newCrono = this.newCrono.bind(this);\n    this.editCrono = this.editCrono.bind(this);\n    this.deleteCrono = this.deleteCrono.bind(this);\n    this.buttonStart = this.buttonStart.bind(this);\n    this.buttonStop = this.buttonStop.bind(this);\n\n    this.state = {\n      cronos: [\n        {\n          title: 'Autoaprendizaje',\n          project: 'Programación React & Redux',\n          id: 0,\n          edit: false,\n          formTitle: '',\n          formProject: '',\n          active: false,\n          counter: 0\n        }, \n        {\n          title: 'Proyecto React & Redux',\n          project: 'Ejercicio Cronómetros',\n          id: 1, \n          edit: false,\n          formTitle: '',\n          formProject: '',\n          active: false,\n          counter: 0\n        }\n      ],\n      timing: []\n    }\n  }\n\n  newCrono() {\n    const numberOfCronos = this.state.cronos.length;\n    const newId = numberOfCronos !== 0 ? (this.state.cronos[numberOfCronos-1].id) + 1 : 0;\n    const crono = {\n      title: '', \n      project: '', \n      id: newId, \n      edit: true,\n      formTitle: '',\n      formProject: '',\n      active: false,\n      counter: 0\n    };\n    this.setState({\n      cronos: this.state.cronos.concat(crono)\n    });\n  };\n\n  deleteCrono(id) {\n    if (window.confirm('¿Estás seguro de eliminar este Cronómetro?')) {\n      const timings = this.state.timing.map((timing) => {\n        if(timing.id === id) {\n          return {\n            ...timing,\n            interval: clearInterval(timing.interval)\n          }\n        } else {\n          return timing\n        }\n      })\n\n      this.setState({\n        cronos: this.state.cronos.filter(crono => id !== crono.id),\n        timing: timings.filter(timing => id !== timing.id) \n      });\n    };\n  };\n\n  editCrono(id) {\n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id) {\n        return {\n          ...crono,\n          edit: true\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos\n    });\n  };\n\n  buttonStart(id,counter) {\n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id) {\n        return {\n          ...crono,\n          active: true\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos,\n      timing: this.state.timing.concat({\n        id: id,\n        interval: setInterval(() => {this.tick(id,counter)},10)\n      })\n    })\n  }\n\n  tick(id) { \n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id) {\n        return {\n          ...crono,\n          counter: crono.counter + 1\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos\n    });\n  }\n\n  buttonStop(id) {\n    const timings = this.state.timing.map((timing) => {\n      if (timing.id === id) {\n        return {\n          ...timing,\n          interval: clearInterval(timing.interval)\n        }\n      } else {\n        return timing\n      }\n    })\n\n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id) {\n        return {\n          ...crono,\n          active: false\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos,\n      timing: timings\n    });\n  }\n\n  changeProperties = (id) => (e) => {\n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id && e.target.name === 'title') {\n        return {\n          ...crono,\n          formTitle: e.target.value\n        }\n      } else if (crono.id === id && e.target.name === 'project'){\n        return {\n          ...crono,\n          formProject: e.target.value\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos\n    });\n  }\n\n  updateCrono = (id) => (e) => {\n    e.preventDefault();\n    const cronos = this.state.cronos.map((crono) => {\n      if (crono.id === id) {\n        return {\n          ...crono,\n          title: crono.formTitle === '' ? crono.title : crono.formTitle,\n          project: crono.formProject === '' ? crono.project : crono.formProject,\n          edit: false\n        }\n      } else {\n        return crono\n      }\n    })\n\n    this.setState({\n      cronos: cronos\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Grid container centered columns={3} >\n        {this.state.cronos.map(crono =>\n          crono.edit ? \n            <CronoForm \n            key={crono.id}\n            title={crono.title}\n            project={crono.project}\n            handleChange={this.changeProperties(crono.id)}\n            handleUpdate={this.updateCrono(crono.id)}\n            handleDelete={() => this.deleteCrono(crono.id)}/>  :\n            <CronoCard \n            key={crono.id}\n            title={crono.title}\n            project={crono.project}\n            active={crono.active}\n            counter={crono.counter}\n            handleDelete={() => this.deleteCrono(crono.id)}\n            handleEdit={() => this.editCrono(crono.id)}\n            handleStart={() => this.buttonStart(crono.id,crono.counter)}\n            handleStop={() => this.buttonStop(crono.id)}/>\n        )}\n        <Grid.Row>\n          <Icon\n          onClick={this.newCrono}\n          link size='big' \n          name=\"add square\"\n          />\n        </Grid.Row>\n      </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default Cronos;","import React from 'react';\nimport './App.css';\nimport Cronos from './components/Cronos';\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"ui dividing centered header\">Cronómetros</h1>\n      <div id=\"content\"></div>\n      <Cronos/>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}